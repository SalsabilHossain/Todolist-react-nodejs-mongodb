[{"/home/salsabill/Documents/Office Work/node js/my-app/src/index.js":"1","/home/salsabill/Documents/Office Work/node js/my-app/src/App.js":"2","/home/salsabill/Documents/Office Work/node js/my-app/src/components/Form.js":"3","/home/salsabill/Documents/Office Work/node js/my-app/src/components/Todolist.js":"4","/home/salsabill/Documents/Office Work/node js/my-app/src/components/ToDo.js":"5"},{"size":153,"mtime":1607408181868,"results":"6","hashOfConfig":"7"},{"size":838,"mtime":1608205699668,"results":"8","hashOfConfig":"7"},{"size":2843,"mtime":1608198958788,"results":"9","hashOfConfig":"7"},{"size":428,"mtime":1608204756444,"results":"10","hashOfConfig":"7"},{"size":1101,"mtime":1608206199040,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"12aml8o",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/salsabill/Documents/Office Work/node js/my-app/src/index.js",[],["24","25"],"/home/salsabill/Documents/Office Work/node js/my-app/src/App.js",["26","27","28"],"/home/salsabill/Documents/Office Work/node js/my-app/src/components/Form.js",["29"],"import React, { useEffect, Fragment } from 'react'\nimport './Form.css'\nimport Todolist from \"./Todolist\"\nimport axios from 'axios';\n\n\nfunction Form({setInputText, inputText, todos, setTodos, select, setselect}){\n    \n    const Priority = (e) => {\n        console.log(e.target.value);\n        setselect(e.target.value);\n\n    };\n\n\n    const inputTextHandler = (e) => {\n        console.log(e.target.value);\n        setInputText(e.target.value);\n\n    };\n\n    const submitTodoHandler = (e) => {\n        e.preventDefault();\n        const li = {\n            tasks: inputText\n            \n          }\n        console.log(li);\n        setTodos([...todos, {text: inputText, completed: false, id: Math.random(), select: select}]);\n        axios.post('http://localhost:5000/taskRoutes/add', li)\n        .then(res => {\n            console.log(res);\n            console.log(res.data);\n          })\n        .catch(error => {\n            console.log(error)\n        })\n        setInputText(\"\");\n        \n\n    };\n    return(\n        \n        <Fragment>\n            <div className='boxflex'>\n                <div className='form'>\n                    <form>\n                        <h1>TO-DO LIST</h1>\n                        <h2>Task</h2>\n                        \n                        <input value={inputText} onChange={inputTextHandler} type=\"text\" name=\"name\" required/><br/>\n                            <label>\n                                Set Priority :\n                                <select value={select} onChange={Priority} required> \n                                    <option value=\"1\">1</option>\n                                    <option value=\"2\">2</option>\n                                    <option value=\"3\">3</option>\n                                    <option value=\"4\">4</option>\n                                    <option value=\"5\">5</option>\n                                    <option value=\"6\">6</option>\n                                    <option value=\"7\">7</option>\n                                    <option value=\"8\">8</option>\n                                    <option value=\"9\">9</option>\n                                    <option value=\"10\">10</option>\n                                </select>\n                            </label><br/>\n                        \n                        <button onClick={submitTodoHandler}>Add</button>\n\n                        \n                                \n                    </form>\n                </div>\n\n                <div className='list'>\n                        <Todolist todos={todos} setInputText={setInputText} setTodos={setTodos} select={select} setselect={setselect}/>\n                        \n\n                </div>\n\n\n\n            </div>\n\n\n\n            \n            \n            \n        </Fragment>\n        \n        \n        \n\n    );\n}\n\nexport default Form;","/home/salsabill/Documents/Office Work/node js/my-app/src/components/Todolist.js",["30"],"/home/salsabill/Documents/Office Work/node js/my-app/src/components/ToDo.js",["31","32","33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":4,"column":8,"nodeType":"40","messageId":"41","endLine":4,"endColumn":16},{"ruleId":"38","severity":1,"message":"42","line":13,"column":10,"nodeType":"40","messageId":"41","endLine":13,"endColumn":17},{"ruleId":"38","severity":1,"message":"43","line":13,"column":19,"nodeType":"40","messageId":"41","endLine":13,"endColumn":29},{"ruleId":"38","severity":1,"message":"44","line":1,"column":17,"nodeType":"40","messageId":"41","endLine":1,"endColumn":26},{"ruleId":"38","severity":1,"message":"45","line":3,"column":8,"nodeType":"40","messageId":"41","endLine":3,"endColumn":12},{"ruleId":"38","severity":1,"message":"44","line":1,"column":17,"nodeType":"40","messageId":"41","endLine":1,"endColumn":26},{"ruleId":"38","severity":1,"message":"39","line":3,"column":8,"nodeType":"40","messageId":"41","endLine":3,"endColumn":16},{"ruleId":"38","severity":1,"message":"46","line":31,"column":11,"nodeType":"40","messageId":"41","endLine":31,"endColumn":24},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'Todolist' is defined but never used.","Identifier","unusedVar","'display' is assigned a value but never used.","'setDisplay' is assigned a value but never used.","'useEffect' is defined but never used.","'Form' is defined but never used.","'updateHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]